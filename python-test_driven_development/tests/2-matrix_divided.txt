# Import the matrix_divided method
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Doctest for the matrix_divided method.

# Check if values divide correctly
>>> matrix_divided([[2, 4, 6], [1, 3.3, 5]], 2)
[[1.0, 2.0, 3.0], [0.5, 1.65, 2.5]]

# Check for div = string
>>> matrix_divided([[1, 3, 5], [7, 11, 23]], 'pi')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Check for division by 0
>>> matrix_divided([[2, 4, 6], [1, 3, 5]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Check for div = float('inf') all values 0.0
>>> matrix_divided([[0.0, 0.0], [0.0, 0.0]], (float('inf')))
[[0.0, 0.0], [0.0, 0.0]]

# Check for non-number matrix values
>>> matrix_divided([[3, 'six', 9], [2, 4, 6]], 10)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Check for rows of differing length
>>> matrix_divided([[3, 4, 6, 8], [1, 7, 2]], 12)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size